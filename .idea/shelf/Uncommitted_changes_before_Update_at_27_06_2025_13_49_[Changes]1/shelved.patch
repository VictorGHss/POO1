Index: src/utfpr/exercicios/lista07/ex04/Dependente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex04/Dependente.java b/src/utfpr/exercicios/lista07/ex04/Dependente.java
new file mode 100644
--- /dev/null	(date 1750876376804)
+++ b/src/utfpr/exercicios/lista07/ex04/Dependente.java	(date 1750876376804)
@@ -0,0 +1,8 @@
+package utfpr.exercicios.lista07.ex04;
+
+public class Dependente extends Cliente{
+
+    public Dependente(String rua, String bairro, String cidade, String estado, String cep, String nome, String dataNascimento, String telefone, Endereco endereco) {
+        super(rua, bairro, cidade, estado, cep, nome, dataNascimento, telefone, endereco);
+    }
+}
Index: src/utfpr/exercicios/lista07/ex04/Socio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex04/Socio.java b/src/utfpr/exercicios/lista07/ex04/Socio.java
new file mode 100644
--- /dev/null	(date 1750893371573)
+++ b/src/utfpr/exercicios/lista07/ex04/Socio.java	(date 1750893371573)
@@ -0,0 +1,28 @@
+package utfpr.exercicios.lista07.ex04;
+
+public class Socio extends Cliente {
+    private String cpf;
+    private Dependente dependente;
+
+    public Socio(String rua, String bairro, String cidade, String estado, String cep, String nome, String dataNascimento, String telefone, Endereco endereco, String cpf, Dependente dependente) {
+        super(rua, bairro, cidade, estado, cep, nome, dataNascimento, telefone, endereco);
+        this.cpf = cpf;
+        this.dependente = dependente;
+    }
+
+    public Dependente getDependente() {
+        return dependente;
+    }
+
+    public void setDependente(Dependente dependente) {
+        this.dependente = dependente;
+    }
+
+    public String getCpf() {
+        return cpf;
+    }
+
+    public void setCpf(String cpf) {
+        this.cpf = cpf;
+    }
+}
Index: src/utfpr/exercicios/lista07/ex04/Cliente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex04/Cliente.java b/src/utfpr/exercicios/lista07/ex04/Cliente.java
new file mode 100644
--- /dev/null	(date 1750890589126)
+++ b/src/utfpr/exercicios/lista07/ex04/Cliente.java	(date 1750890589126)
@@ -0,0 +1,48 @@
+package utfpr.exercicios.lista07.ex04;
+
+public abstract class Cliente extends Endereco {
+    protected String nome;
+    protected String dataNascimento;
+    protected String telefone;
+    protected Endereco endereco;
+
+    public Cliente(String rua, String bairro, String cidade, String estado, String cep, String nome, String dataNascimento, String telefone, Endereco endereco) {
+        super(rua, bairro, cidade, estado, cep);
+        this.nome = nome;
+        this.dataNascimento = dataNascimento;
+        this.telefone = telefone;
+        this.endereco = endereco;
+    }
+
+    public String getNome() {
+        return nome;
+    }
+
+    public void setNome(String nome) {
+        this.nome = nome;
+    }
+
+    public String getDataNascimento() {
+        return dataNascimento;
+    }
+
+    public void setDataNascimento(String dataNascimento) {
+        this.dataNascimento = dataNascimento;
+    }
+
+    public String getTelefone() {
+        return telefone;
+    }
+
+    public void setTelefone(String telefone) {
+        this.telefone = telefone;
+    }
+
+    public Endereco getEndereco() {
+        return endereco;
+    }
+
+    public void setEndereco(Endereco endereco) {
+        this.endereco = endereco;
+    }
+}
Index: src/utfpr/exercicios/lista01/ex02/Pessoa.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista01/ex02/Pessoa.java b/src/utfpr/exercicios/lista01/ex02/Pessoa.java
new file mode 100644
--- /dev/null	(date 1750098534539)
+++ b/src/utfpr/exercicios/lista01/ex02/Pessoa.java	(date 1750098534539)
@@ -0,0 +1,45 @@
+package utfpr.exercicios.lista01.ex02;
+
+public class Pessoa {
+    private String nome;
+    private String sexo;
+    private Long cpf;
+    private int idade;
+    private int altura;
+    private double peso;
+
+    public Pessoa(String nome, String sexo, Long cpf, int idade, int altura, double peso) {
+        this.nome = nome;
+        this.sexo = sexo;
+        this.cpf = cpf;
+        this.idade = idade;
+        this.altura = altura;
+        this.peso = peso;
+    }
+
+    public void andar(){
+        System.out.println(nome + " est치 andando.");
+    }
+
+    public void correr(){
+        System.out.println(nome + " est치 correndo.");
+    }
+
+    public void falar(String mensagem){
+        System.out.println(nome + " diz: " + mensagem);
+    }
+
+    public void dormir(){
+        System.out.println(nome + " est치 dormindo游눣游눣游눣");
+    }
+
+    public void imprimirDados(){
+        System.out.println("--- Informa칞칫es da Pessoa ---");
+        System.out.println("Nome: " + nome);
+        System.out.println("Sexo: " + sexo);
+        System.out.println("CPF: " + cpf);
+        System.out.println("Idade: " + idade);
+        System.out.println("Altura: " + altura + " cm");
+        System.out.println("Peso: " + peso + " kg");
+    }
+}
Index: src/utfpr/exercicios/lista07/ex04/Filme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex04/Filme.java b/src/utfpr/exercicios/lista07/ex04/Filme.java
new file mode 100644
--- /dev/null	(date 1750893326001)
+++ b/src/utfpr/exercicios/lista07/ex04/Filme.java	(date 1750893326001)
@@ -0,0 +1,153 @@
+package utfpr.exercicios.lista07.ex04;
+
+public class Filme {
+    //Filme
+    private String titulo;
+    private int duracaoMinutos;
+    private double precoLocacao;
+    private double multaAtraso;
+    private boolean disponivel = true;
+
+    //Cliente
+    private Cliente cliente;
+    private int diaLocacao;
+    private int diaPrevistoDevolucao;
+    private int diaDevolucao;
+
+    public Filme(String titulo, int duracaoMinutos, double precoLocacao, double multaAtraso, Cliente cliente, int diaLocacao) {
+        this.titulo = titulo;
+        this.duracaoMinutos = duracaoMinutos;
+        this.precoLocacao = precoLocacao;
+        this.multaAtraso = 2.00;
+        this.disponivel = true;
+        this.cliente = cliente;
+        this.diaLocacao = diaLocacao;
+        this.diaPrevistoDevolucao = diaLocacao + 3;
+        this.diaDevolucao = 0;
+    }
+
+    public void alugarFilme() {
+        if (disponivel) {
+            System.out.printf("Filme %s alugado com sucesso por %s, no dia %d \n", titulo, cliente.getNome(), diaLocacao);
+            disponivel = false;
+        } else {
+            System.out.printf("Filme %s n칚o est치 dispon칤vel para loca칞칚o.", titulo);
+        }
+    }
+
+    public void devolverFilme() {
+        if (!disponivel) {
+            System.out.printf("Filme %s devolvido com sucesso por %s, no dia %d \n", titulo, cliente.getNome(), diaDevolucao);
+            System.out.printf("Valor total da loca칞칚o: R$ %.2f \n", precoLocacao + calcularMulta());
+            disponivel = true;
+        } else {
+            System.out.printf("Filme %s n칚o estava alugado.", titulo);
+        }
+    }
+
+    public double calcularMulta() {
+        if (diaDevolucao > diaPrevistoDevolucao) {
+            int diasAtraso = diaDevolucao - diaPrevistoDevolucao;
+            double multaTotal = diasAtraso * multaAtraso;
+            System.out.printf("Filme %s devolvido com atraso de %d dias. Multa tota: R$ %.2f \n", titulo, diasAtraso, multaTotal);
+        } else {
+            System.out.printf("Filme %s devolvido no prazo. Sem multa. \n", titulo);
+            return 0;
+        }
+        return 0;
+    }
+
+    public void relatorioLocacao() {
+        System.out.printf("Relat칩rio de loca칞칚o do filme %s: \n", titulo);
+        System.out.printf("Dura칞칚o: %d minutos \n", duracaoMinutos);
+        System.out.printf("Pre칞o da loca칞칚o: R$ %.2f \n", precoLocacao);
+        System.out.printf("Multa por atraso: R$ %.2f \n", multaAtraso);
+        if (cliente != null) {
+            System.out.printf("Cliente: %s, Dia de loca칞칚o: %d, Dia previsto de devolu칞칚o: %d, Dia de devolu칞칚o: %d \n",
+                    cliente.getNome(), diaLocacao, diaPrevistoDevolucao, diaDevolucao);
+            System.out.println("Valor total da loca칞칚o: " + (multaAtraso + precoLocacao) + " reais");
+        } else {
+            System.out.println("Nenhum cliente associado.");
+        }
+    }
+
+    public void relatorioFilme() {
+        System.out.printf("T칤tulo: %s \n", titulo);
+        System.out.printf("Dura칞칚o: %d minutos \n", duracaoMinutos);
+        System.out.printf("Pre칞o da loca칞칚o: R$ %.2f \n", precoLocacao);
+        System.out.printf("Multa por atraso: R$ %.2f \n", multaAtraso);
+        System.out.printf("Dispon칤vel: %s \n", disponivel ? "Sim" : "N칚o");
+    }
+
+    public String getTitulo() {
+        return titulo;
+    }
+
+    public void setTitulo(String titulo) {
+        this.titulo = titulo;
+    }
+
+    public int getDuracaoMinutos() {
+        return duracaoMinutos;
+    }
+
+    public void setDuracaoMinutos(int duracaoMinutos) {
+        this.duracaoMinutos = duracaoMinutos;
+    }
+
+    public double getPrecoLocacao() {
+        return precoLocacao;
+    }
+
+    public void setPrecoLocacao(double precoLocacao) {
+        this.precoLocacao = precoLocacao;
+    }
+
+    public double getMultaAtraso() {
+        return multaAtraso;
+    }
+
+    public void setMultaAtraso(double multaAtraso) {
+        this.multaAtraso = multaAtraso;
+    }
+
+    public boolean isDisponivel() {
+        return disponivel;
+    }
+
+    public void setDisponivel(boolean disponivel) {
+        this.disponivel = disponivel;
+    }
+
+    public Cliente getCliente() {
+        return cliente;
+    }
+
+    public void setCliente(Cliente cliente) {
+        this.cliente = cliente;
+    }
+
+    public int getDiaLocacao() {
+        return diaLocacao;
+    }
+
+    public void setDiaLocacao(int diaLocacao) {
+        this.diaLocacao = diaLocacao;
+    }
+
+    public int getDiaPrevistoDevolucao() {
+        return diaPrevistoDevolucao;
+    }
+
+    public void setDiaPrevistoDevolucao(int diaPrevistoDevolucao) {
+        this.diaPrevistoDevolucao = diaPrevistoDevolucao;
+    }
+
+    public int getDiaDevolucao() {
+        return diaDevolucao;
+    }
+
+    public void setDiaDevolucao(int diaDevolucao) {
+        this.diaDevolucao = diaDevolucao;
+    }
+}
\ No newline at end of file
Index: src/utfpr/exercicios/lista07/ex04/Endereco.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex04/Endereco.java b/src/utfpr/exercicios/lista07/ex04/Endereco.java
new file mode 100644
--- /dev/null	(date 1750891267223)
+++ b/src/utfpr/exercicios/lista07/ex04/Endereco.java	(date 1750891267223)
@@ -0,0 +1,17 @@
+package utfpr.exercicios.lista07.ex04;
+
+public class Endereco {
+    protected String rua;
+    protected String bairro;
+    protected String cidade;
+    protected String estado;
+    protected String cep;
+
+    public Endereco(String rua, String bairro, String cidade, String estado, String cep) {
+        this.rua = rua;
+        this.bairro = bairro;
+        this.cidade = cidade;
+        this.estado = estado;
+        this.cep = cep;
+    }
+}
\ No newline at end of file
Index: src/utfpr/exercicios/lista01/ex02/PessoaTeste.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista01/ex02/PessoaTeste.java b/src/utfpr/exercicios/lista01/ex02/PessoaTeste.java
new file mode 100644
--- /dev/null	(date 1750098511632)
+++ b/src/utfpr/exercicios/lista01/ex02/PessoaTeste.java	(date 1750098511632)
@@ -0,0 +1,13 @@
+package utfpr.exercicios.lista01.ex02;
+
+public class PessoaTeste {
+    public static void main(String[] args) {
+        Pessoa pessoa = new Pessoa("Jo칚o", "Masculino", 12345678901L, 25, 180, 75.5);
+
+        pessoa.imprimirDados();
+        pessoa.andar();
+        pessoa.correr();
+        pessoa.falar("Ol치, tudo bem?");
+        pessoa.dormir();
+    }
+}
Index: src/utfpr/exercicios/lista01/ex01/Carro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista01/ex01/Carro.java b/src/utfpr/exercicios/lista01/ex01/Carro.java
new file mode 100644
--- /dev/null	(date 1750098239444)
+++ b/src/utfpr/exercicios/lista01/ex01/Carro.java	(date 1750098239444)
@@ -0,0 +1,48 @@
+package utfpr.exercicios.lista01.ex01;
+
+public class Carro {
+    private String modelo;
+    private String marca;
+    private String cor;
+    private String placa;
+    private String chassi;
+    private int ano;
+    private int renavam;
+
+    public Carro(String modelo, String marca, String cor, String placa, String chassi, int ano, int renavam) {
+        this.modelo = modelo;
+        this.marca = marca;
+        this.cor = cor;
+        this.placa = placa;
+        this.chassi = chassi;
+        this.ano = ano;
+        this.renavam = renavam;
+    }
+
+    public void ligar(){
+        System.out.println(modelo + " " + marca + " est치 ligado.");
+    }
+    
+    public void desligar(){
+        System.out.println(modelo + " " + marca + " est치 desligado.");
+    }
+    
+    public void acelerar(){
+        System.out.println(modelo + " " + marca + " est치 acelerando.");
+    }
+    
+    public void frear(){
+        System.out.println(modelo + " " + marca + " est치 freando.");
+    }
+
+    public void imprimirDados(){
+        System.out.println("--- Informa칞칫es do Carro ---");
+        System.out.println("Modelo: " + modelo);
+        System.out.println("Marca: " + marca);
+        System.out.println("Cor: " + cor);
+        System.out.println("Placa: " + placa);
+        System.out.println("Chassi: " + chassi);
+        System.out.println("Ano: " + ano);
+        System.out.println("Renavam: " + renavam);
+    }
+}
Index: src/utfpr/exercicios/lista01/ex01/CarroTeste.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista01/ex01/CarroTeste.java b/src/utfpr/exercicios/lista01/ex01/CarroTeste.java
new file mode 100644
--- /dev/null	(date 1750098255164)
+++ b/src/utfpr/exercicios/lista01/ex01/CarroTeste.java	(date 1750098255164)
@@ -0,0 +1,13 @@
+package utfpr.exercicios.lista01.ex01;
+
+public class CarroTeste {
+    public static void main(String[] args) {
+        Carro carro = new Carro("Fusca", "Volkswagen", "Azul", "ABC-1234", "1234567890", 1975, 123456789);
+
+        carro.imprimirDados();
+        carro.ligar();
+        carro.acelerar();
+        carro.frear();
+        carro.desligar();
+    }
+}
Index: src/utfpr/exercicios/lista07/ex01/Trapezio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex01/Trapezio.java b/src/utfpr/exercicios/lista07/ex01/Trapezio.java
new file mode 100644
--- /dev/null	(date 1750641871202)
+++ b/src/utfpr/exercicios/lista07/ex01/Trapezio.java	(date 1750641871202)
@@ -0,0 +1,4 @@
+package utfpr.exercicios.lista07.ex01;
+
+public class Trapezio {
+}
Index: src/utfpr/exercicios/lista07/questao_prova/ContaCorrente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/questao_prova/ContaCorrente.java b/src/utfpr/exercicios/lista07/questao_prova/ContaCorrente.java
new file mode 100644
--- /dev/null	(date 1751033105807)
+++ b/src/utfpr/exercicios/lista07/questao_prova/ContaCorrente.java	(date 1751033105807)
@@ -0,0 +1,32 @@
+package utfpr.exercicios.lista07.questao_prova;
+
+public class ContaCorrente extends Conta {
+    private double limite;
+
+    public ContaCorrente(Correntista correntista, String numAgencia, String numConta, String senha, double limite) {
+        super(correntista, numAgencia, numConta, senha);
+        this.limite = limite;
+    }
+
+    @Override
+    public void sacar(String numConta, String senha, double valorSaque) {
+        if (!this.getNumConta().equals(numConta)) {
+            System.out.println("A conta informada n칚o existe!");
+            return;
+        }
+        if (!verificarSenha(senha)) {
+            System.out.println("Senha incorreta!");
+            return;
+        }
+        if ((this.getSaldo() - valorSaque) >= -this.limite) {
+            this.setSaldo(this.getSaldo() - valorSaque);
+            System.out.printf("Saque de R$ %.2f realizado com sucesso!%n", valorSaque);
+        } else {
+            System.out.println("Saldo insuficiente!");
+        }
+    }
+
+    public double getLimite() {
+        return limite;
+    }
+}
Index: src/utfpr/exercicios/lista07/ex01/FigurasGeometricas.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex01/FigurasGeometricas.java b/src/utfpr/exercicios/lista07/ex01/FigurasGeometricas.java
new file mode 100644
--- /dev/null	(date 1750642804079)
+++ b/src/utfpr/exercicios/lista07/ex01/FigurasGeometricas.java	(date 1750642804079)
@@ -0,0 +1,11 @@
+package utfpr.exercicios.lista07.ex01;
+
+public abstract class FigurasGeometricas {
+    protected String cor;
+
+    public void calcularArea(){
+
+    }
+    public void calcularPerimetro(){
+    }
+}
Index: src/utfpr/exercicios/lista07/questao_prova/Correntista.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/questao_prova/Correntista.java b/src/utfpr/exercicios/lista07/questao_prova/Correntista.java
new file mode 100644
--- /dev/null	(date 1751033082947)
+++ b/src/utfpr/exercicios/lista07/questao_prova/Correntista.java	(date 1751033082947)
@@ -0,0 +1,26 @@
+package utfpr.exercicios.lista07.questao_prova;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Correntista {
+    private String nomeCorrentista;
+    private List<Conta> contas;
+
+    public Correntista(String nomeCorrentista) {
+        this.nomeCorrentista = nomeCorrentista;
+        this.contas = new ArrayList<>();
+    }
+
+    public void adicionarConta(Conta conta) {
+        contas.add(conta);
+    }
+
+    public List<Conta> getContas() {
+        return contas;
+    }
+
+    public String getNomeCorrentista() {
+        return nomeCorrentista;
+    }
+}
Index: src/utfpr/exercicios/lista07/ex01/Retangulo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex01/Retangulo.java b/src/utfpr/exercicios/lista07/ex01/Retangulo.java
new file mode 100644
--- /dev/null	(date 1750641792657)
+++ b/src/utfpr/exercicios/lista07/ex01/Retangulo.java	(date 1750641792657)
@@ -0,0 +1,4 @@
+package utfpr.exercicios.lista07.ex01;
+
+public class Retangulo {
+}
Index: src/utfpr/exercicios/lista07/ex04/TesteLocacao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex04/TesteLocacao.java b/src/utfpr/exercicios/lista07/ex04/TesteLocacao.java
new file mode 100644
--- /dev/null	(date 1750893354963)
+++ b/src/utfpr/exercicios/lista07/ex04/TesteLocacao.java	(date 1750893354963)
@@ -0,0 +1,16 @@
+package utfpr.exercicios.lista07.ex04;
+
+public class TesteLocacao {
+    public static void main(String[] args) {
+        Endereco endereco = new Endereco("Rua A", "Bairro B", "Cidade C", "Estado D", "12345-678");
+
+        Dependente dependente = new Dependente("Rua X", "Bairro Y", "Cidade Z", "Estado W", "87654-321", "Dependente A", "01/01/2000", "(11) 98765-4321", endereco);
+
+        Socio socio = new Socio("Rua 1", "Bairro 2", "Cidade 3", "Estado 4", "12345-678", "Ronaldo", "02/02/1990", "(11) 91234-5678", endereco, "123.456.789-00", dependente);
+
+        Filme filme1 = new Filme("Brokeback Mountain", 180, 15.99, 2.00, socio, 1);
+        System.out.println("S칩cio: " + socio.getNome());
+        System.out.println("Dependente: " + socio.getDependente().getNome());
+
+    }
+}
Index: src/utfpr/exercicios/lista07/ex01/Losango.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex01/Losango.java b/src/utfpr/exercicios/lista07/ex01/Losango.java
new file mode 100644
--- /dev/null	(date 1750641808218)
+++ b/src/utfpr/exercicios/lista07/ex01/Losango.java	(date 1750641808218)
@@ -0,0 +1,4 @@
+package utfpr.exercicios.lista07.ex01;
+
+public class Losango {
+}
Index: src/utfpr/exercicios/lista07/ex01/Circulo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex01/Circulo.java b/src/utfpr/exercicios/lista07/ex01/Circulo.java
new file mode 100644
--- /dev/null	(date 1750641746489)
+++ b/src/utfpr/exercicios/lista07/ex01/Circulo.java	(date 1750641746489)
@@ -0,0 +1,4 @@
+package utfpr.exercicios.lista07.ex01;
+
+public class Circulo {
+}
Index: src/utfpr/exercicios/lista07/ex01/Quadrado.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/ex01/Quadrado.java b/src/utfpr/exercicios/lista07/ex01/Quadrado.java
new file mode 100644
--- /dev/null	(date 1750641767139)
+++ b/src/utfpr/exercicios/lista07/ex01/Quadrado.java	(date 1750641767139)
@@ -0,0 +1,4 @@
+package utfpr.exercicios.lista07.ex01;
+
+public class Quadrado {
+}
Index: src/utfpr/exercicios/lista07/questao_prova/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/questao_prova/App.java b/src/utfpr/exercicios/lista07/questao_prova/App.java
new file mode 100644
--- /dev/null	(date 1751033620400)
+++ b/src/utfpr/exercicios/lista07/questao_prova/App.java	(date 1751033620400)
@@ -0,0 +1,58 @@
+package utfpr.exercicios.lista07.questao_prova;
+
+public class App {
+    public static void main(String[] args) {
+        // Criar correntistas
+        Correntista victor = new Correntista("Victor");
+        Correntista joslaine = new Correntista("Joslaine");
+
+        // Criar contas
+        ContaCorrente contaCorrente = new ContaCorrente(victor, "0000-11", "31254-5", "10262004", 1000.00);
+        ContaPoupanca contaPoupanca = new ContaPoupanca(joslaine, "0000-15", "12891-4", "30145241", 0.10);
+
+        // Adicionar contas aos correntistas
+        victor.adicionarConta(contaCorrente);
+        joslaine.adicionarConta(contaPoupanca);
+
+        System.out.println("Realizando deposito na conta corrente");
+        contaCorrente.depositar("31254-5", "10262004", 1000.00);
+        System.out.println("========================");
+
+        System.out.println("Realizando saque na conta corrente");
+        contaCorrente.sacar("31254-5", "10262004", 1000.00);
+        System.out.println("========================");
+
+        System.out.println("Verificando saldo na conta corrente");
+        contaCorrente.verificarSaldo("31254-5", "10262004");
+        System.out.println("========================");
+
+        System.out.println("Testando o limite da conta corrente");
+        System.out.println("Tentando sacar R$ 500,00 com saldo zero (usando o limite)");
+        contaCorrente.sacar("31254-5", "10262004", 500.00);
+        contaCorrente.verificarSaldo("31254-5", "10262004");
+        System.out.println("========================");
+
+        System.out.println("Tentando sacar mais R$ 600,00 (excederia o limite de R$ 1000,00)");
+        contaCorrente.sacar("31254-5", "10262004", 600.00);
+        contaCorrente.verificarSaldo("31254-5", "10262004");
+        System.out.println("========================");
+
+        System.out.println("Realizando deposito na conta poupan칞a");
+        contaPoupanca.depositar("12891-4", "30145241", 1000.00);
+        System.out.println("========================");
+
+        System.out.println("Realizando saque na conta poupan칞a");
+        contaPoupanca.sacar("12891-4", "30145241", 500.00);
+        System.out.println("========================");
+
+        System.out.println("Verificando saldo na conta poupan칞a");
+        contaPoupanca.verificarSaldo("12891-4", "30145241");
+        System.out.println("========================");
+
+        // Nota: O rendimento j치 칠 aplicado automaticamente durante o dep칩sito
+        // Esta chamada 칠 apenas para demonstrar o m칠todo aplicarRendimento() separadamente
+        System.out.println("Aplicando rendimento adicional na conta poupan칞a");
+        contaPoupanca.aplicarRendimento();
+        contaPoupanca.verificarSaldo("12891-4", "30145241");
+    }
+}
Index: src/utfpr/exercicios/lista07/questao_prova/ContaPoupanca.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utfpr/exercicios/lista07/questao_prova/ContaPoupanca.java b/src/utfpr/exercicios/lista07/questao_prova/ContaPoupanca.java
new file mode 100644
--- /dev/null	(date 1751033599682)
+++ b/src/utfpr/exercicios/lista07/questao_prova/ContaPoupanca.java	(date 1751033599682)
@@ -0,0 +1,61 @@
+package utfpr.exercicios.lista07.questao_prova;
+
+public class ContaPoupanca extends Conta {
+    private double rendimento;
+
+    public ContaPoupanca(Correntista correntista, String numAgencia, String numConta, String senha, double rendimento) {
+        super(correntista, numAgencia, numConta, senha);
+        this.rendimento = rendimento;
+    }
+
+    @Override
+    public void depositar(String numConta, String senha, double valorDeposito) {
+        if (!this.getNumConta().equals(numConta)) {
+            System.out.println("A conta informada n칚o existe!");
+            return;
+        }
+        if (!verificarSenha(senha)) {
+            System.out.println("Senha incorreta!");
+            return;
+        }
+        if (valorDeposito > 0) {
+            this.setSaldo(this.getSaldo() + valorDeposito);
+            System.out.printf("Dep칩sito de R$ %.2f realizado com sucesso.%n", valorDeposito);
+
+            // Aplicar rendimento imediatamente ap칩s o dep칩sito
+            double valorRendimento = valorDeposito * this.rendimento;
+            this.setSaldo(this.getSaldo() + valorRendimento);
+            System.out.printf("Rendimento de R$ %.2f aplicado com sucesso!%n", valorRendimento);
+        } else {
+            System.out.println("O valor do dep칩sito deve ser positivo.");
+        }
+    }
+
+    @Override
+    public void sacar(String numConta, String senha, double valorSaque) {
+        if (!this.getNumConta().equals(numConta)) {
+            System.out.println("A conta informada n칚o existe!");
+            return;
+        }
+        if (!verificarSenha(senha)) {
+            System.out.println("Senha incorreta!");
+            return;
+        }
+        if (this.getSaldo() >= valorSaque) {
+            this.setSaldo(this.getSaldo() - valorSaque);
+            System.out.printf("Saque de R$ %.2f realizado com sucesso!%n", valorSaque);
+        } else {
+            System.out.println("Saldo insuficiente!");
+        }
+    }
+
+    public void aplicarRendimento() {
+        double valorRendimento = this.getSaldo() * this.rendimento;
+        this.setSaldo(this.getSaldo() + valorRendimento);
+        System.out.printf("Rendimento de R$ %.2f aplicado com sucesso!%n", valorRendimento);
+    }
+
+    public double getRendimento() {
+        return rendimento;
+    }
+}
